{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,GAAUC,SAAEA,EAAQC,MAAEA,IAC7BJ,EAAAK,OAAOC,QAAQ,uBAAqBH,QAAiBC,M,CAGvD,SAASG,GAASJ,SAAEA,EAAQC,MAAEA,IAC5BJ,EAAAK,OAAOG,QAAQ,sBAAoBL,QAAeC,M,EAtCvC,CACXK,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAe3B,SAA0BC,GACxBA,EAAMC,iBACN,MAAMV,EAAQW,OAAOF,EAAMG,OAAOZ,MAAMa,OAClCC,EAAOH,OAAOF,EAAMG,OAAOE,KAAKD,OAChCE,EAASJ,OAAOF,EAAMG,OAAOG,OAAOF,OAC1CG,MAAMD,GACHE,KAAK,MACLC,SAAQ,CAACC,EAAGC,IApBjB,SAAuBrB,EAAUC,GAC/B,OAAO,IAAIqB,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEvB,E,MAAUC,IAEpBuB,EAAO,C,SAAExB,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAYP2B,CAAcP,EAAI,EAAGpB,EAAQc,EAAOM,GACjCQ,KAAK9B,GACL+B,MAAM1B,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onCreatePromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromises(event) {\n  event.preventDefault();\n  const delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n  Array(amount)\n    .fill(null)\n    .forEach((_, i) =>\n      createPromise(i + 1, delay + step * i)\n        .then(onResolve)\n        .catch(onReject)\n    );\n}\n\nfunction onResolve({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onReject({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$onResolve","position","delay","Notify","success","$47d4ff9957288465$var$onReject","failure","form","document","querySelector","addEventListener","event","preventDefault","Number","target","value","step","amount","Array","fill","forEach","_","i","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$createPromise","then","catch"],"version":3,"file":"03-promises.3f27b5f3.js.map"}